<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="TestResource_DWHstage_9c0a93a6e32045e78e7d50bba97c5f8f" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEABXKMQ7DIAxA0XCI7lygqFm6REzQoTO5gCFuimSwQoyq9PRNx//0XfAPNQyDuoRjFyzG
        g4AJGznKWEXBv3Xg3hLaSNco+0ajidBezGKW8p2eNUsG0u48iVfrP+/TBNcGgosOmHrLcti5dZwc14pJ
        9JwLchd7v/0AvCGHFIIAAAA=
</value>
  </data>
  <data name="TestResource_SSASMatrixProduction_b89de6cae6604205b75e0566246db3fc" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEAC2NQQ6CMBAA4Qn+oC8ocjOSHgx4MJFAUj+wllU2wdZst6I+zPep0TnOHKa2zTbPsixf
        2EcUvOgGBHQ3YXPMX3nP4UYDsmltt9/0elV9s7IhsUMDEZ6JcV0UkKIwTAQIUfTf65n8EOaoPUoB8crD
        MI/LsuqRI0VRFl1ikofa+VMwB05Y1eBGVJskI3ohB0LB/8rOkxBMqv78p3A2LQjTvaqD9+hEHeiCIYkp
        lx/eMxN4idQAAAA=
</value>
  </data>
  <data name="TestResource_DWHProd_c2a749ae94fd4b38a26c8ca0efb4360b" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEABXKsQ7CIBRGYXgId56A6OLSMIGDM52bUHqtJMBN6U9MfXrreL4c691DCiHkxR87qGgX
        ELTfss2JKuT0b+W5t0hmxr7lm55DezFDL+U7PGtCClnZc8u8Gvd5nwZaWwAtylPsLeEwY+s0WK6VItSY
        CnGHuV9/jAWg6H8AAAA=
</value>
  </data>
  <data name="TestResource_SSASMatrixStage_8e44e5c05a37464488a9d311993a301b" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEAC3OQYrCQBAF0OQI3qBP0DG7YUIvJHEhKAbaC5Sd0hTEbqiqNuNczcsZ0b998P9vfbct
        i6IoV/4hijfbgYI9Ttidy2fZc7rTgOwO/rjf9PanebPxKXNABwL/mfG3qiCLMkwEkrKOCKL2i3amOKRZ
        bEStQAa8D/O4rpseWUjUeAyZSR9mFy/JnThj00IY0WzeRVEpgFKKH9lFUoLJtMuJKV3dAZTpr2lTjBjU
        nOiGy76r10teoDhCL9kAAAA=
</value>
  </data>
  <data name="TestResource_ExpectedQuery_d8bd41baa60e4c23a12d7d18832e3b21" xml:space="preserve">
    <value>Select SUM (fs.[Net Commission]) SumFull_Selling_Commission from viewFactCommission fs
join dw.dimSales s 
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'</value>
  </data>
  <data name="TestResource_ActualQuery_2796ba3f1836410ca57c47fa83eafe42" xml:space="preserve">
    <value>// DAX Query
EVALUATE
  ROW(
    "SumFull_Selling_Commission", CALCULATE(SUM('Listing'[Full Selling Commission]))
  )</value>
  </data>
  <data name="TestResource_ComparisonManifest_16375175e0704444bc42b97d2a95228b" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAwAAACg8Q29tcGFyZXJEYXRhIHBlcmNlbnRhZ2VUb2xlcmFu
        Y2U9IjEiIC8+GlN1bUZ1bGxfU2VsbGluZ19Db21taXNzaW9uHFtTdW1GdWxsX1NlbGxpbmdfQ29tbWlz
        c2lvbl0AAAAA
</value>
  </data>
  <data name="TestResource_ExpectedQuery_370f112048ca42b7a27068d01e671397" xml:space="preserve">
    <value>with ctet1 as (
Select sum (fs.[Net Commission]) SellingComm ,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
and fs.DIM_DATE_KEY between '20190401' and '20200331'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),
ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,l.LISTING_NUMBER
from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
--and fs.[Listing Number]='787230'
group by l.LISTING_NUMBER  ),
ctet3 as (
select iif(fulllisting=0,0,SellingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2
on ctet1.[Listing Number]=ctet2.LISTING_NUMBER
)
select sum(ctet3.ProductivityPerlisting) Count_of_Selling_Productivity_Rolling_12_Months_Live FROM ctet3

</value>
  </data>
  <data name="TestResource_ActualQuery_e52e3b39fcc040c5bb0b3c13312eaa5e" xml:space="preserve">
    <value>// DAX Query
DEFINE VAR __DS0FilterTable = 
  TREATAS({TRUE}, 'Date'[Is Last Financial Year])

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Is Last Financial Year],
      __DS0FilterTable,
      "Count_of_Selling_Productivity_FYTD_Live_", 'Measure'[Count of Selling Productivity FYTD(Live)]
    ),
    [Count_of_Selling_Productivity_FYTD_Live_],
    0,
    'Date'[Is Last Financial Year],
    1
  )

ORDER BY
  [Count_of_Selling_Productivity_FYTD_Live_] DESC, 'Date'[Is Last Financial Year]
</value>
  </data>
  <data name="TestResource_ComparisonManifest_91f4837032ba4b4b9475229f327b46c0" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAABAAAAAgAAACM8Q29tcGFyZXJEYXRhIGZpeGVkVG9sZXJhbmNlPSIx
        IiAvPjRDb3VudF9vZl9TZWxsaW5nX1Byb2R1Y3Rpdml0eV9Sb2xsaW5nXzEyX01vbnRoc19MaXZlKltD
        b3VudF9vZl9TZWxsaW5nX1Byb2R1Y3Rpdml0eV9GWVREX0xpdmVfXQAAAAA=
</value>
  </data>
  <data name="TestResource_ExpectedQuery_c150efec05c94a3ba864948353e9f0ff" xml:space="preserve">
    <value>with ctet1 as (
Select sum (fs.[Net Commission]) SellingComm ,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
and fs.DIM_DATE_KEY between '20190201' and '20200131'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),
ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,l.LISTING_NUMBER
from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
--and fs.[Listing Number]='787230'
group by l.LISTING_NUMBER  ),
ctet3 as (
select iif(fulllisting=0,0,SellingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2
on ctet1.[Listing Number]=ctet2.LISTING_NUMBER
)
select sum(ctet3.ProductivityPerlisting) Count_of_Selling_Productivity_Rolling_12_Months_Live FROM ctet3

</value>
  </data>
  <data name="TestResource_ActualQuery_72223513875f49d0bfef70a454e7ca42" xml:space="preserve">
    <value>// DAX Query
DEFINE
  VAR __DS0FilterTable = 
    TREATAS({"January"}, 'Date'[Calendar Month Name])

  VAR __DS0FilterTable2 = 
    FILTER(KEEPFILTERS(VALUES('Date'[Calendar Year])), 'Date'[Calendar Year] = 2020)

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Calendar Month Name],
      'Date'[Financial Month Number],
      'Date'[Calendar Year],
      __DS0FilterTable,
      __DS0FilterTable2,
      "Count_of_Selling_Productivity_Rolling_12_Months_Live_", ROUNDDOWN(('Measure'[Count of Selling Productivity Rolling 12 Months(Live)]),2)
    ),
    'Date'[Financial Month Number],
    1,
    'Date'[Calendar Month Name],
    1,
    'Date'[Calendar Year],
    1
  )

ORDER BY
  'Date'[Financial Month Number], 'Date'[Calendar Month Name], 'Date'[Calendar Year]
</value>
  </data>
  <data name="TestResource_ComparisonManifest_f5e9a24dc9444775a5975d837a1755cd" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAADAAAAAwAAACg8Q29tcGFyZXJEYXRhIHBlcmNlbnRhZ2VUb2xlcmFu
        Y2U9IjIiIC8+NENvdW50X29mX1NlbGxpbmdfUHJvZHVjdGl2aXR5X1JvbGxpbmdfMTJfTW9udGhzX0xp
        dmU3W0NvdW50X29mX1NlbGxpbmdfUHJvZHVjdGl2aXR5X1JvbGxpbmdfMTJfTW9udGhzX0xpdmVfXQAA
        AAA=
</value>
  </data>
  <data name="TestResource_ExpectedQuery_df9b9f58657a4c66b9c964b8fbe176f9" xml:space="preserve">
    <value>with ctet1 as (
Select sum (fs.[Net Commission]) SellingComm,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
and fs.DIM_DATE_KEY between '20190401' and '20200331'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),

ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,fs.[Listing Number] 
from viewFactCommission fs
join dw.dimSales s 
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
--and fs.[Listing Number]='787230'
--and fs.DIM_DATE_KEY between '20200401' and '20210331'
group by fs.[Listing Number]  )
,
ctet3 as (
select iif(fulllisting=0,0,SellingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2 
on ctet1.[Listing Number]=ctet2.[Listing Number]
),

ctet4 as (
select round(sum(ctet3.ProductivityPerlisting) ,2) Count_of_Selling_Productivity_Rolling_12Month_live from ctet3 )
,

ctet5 as (
select SUM(NET_COMMISSION) Total_GCI_From_Selling_Trans_Rolling_12_Months
 from dw.factSalesCommission fs
 join dw.dimSales s
 on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
 where 
 --COMMISSION_TYPE_CODE='S'
 [COMMISSION_TYPE_NAME]='Selling Commission'
 and s.IS_SALECLEARED=1
  and DIM_DATE_FINALISED_KEY between '20190401' AND '20200331'

  )
  
  SELECT ROUND((Total_GCI_From_Selling_Trans_Rolling_12_Months/Count_of_Selling_Productivity_Rolling_12Month_live),3,2)
  as Average_GCI_Per_Listing_FYTD_Live
   from ctet4 join ctet5 on 1=1  




</value>
  </data>
  <data name="TestResource_ComparisonManifest_95b112e5b16b4ec9829d93b3d2518284" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAABAAAAAwAAACg8Q29tcGFyZXJEYXRhIHBlcmNlbnRhZ2VUb2xlcmFu
        Y2U9IjEiIC8+IUF2ZXJhZ2VfR0NJX1Blcl9MaXN0aW5nX0ZZVERfTGl2ZSFbQXZlcmFnZV9HQ0lfUGVy
        X1NhbGVfRllURF9MaXZlX10AAAAA
</value>
  </data>
  <data name="TestResource_ActualQuery_9c9596b69663454cae718c20f5be4e4f" xml:space="preserve">
    <value>// DAX Query
DEFINE VAR __DS0FilterTable = 
  TREATAS({"2019-2020"}, 'Date'[Financial Year (Calendar)])

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Financial Year (Calendar)],
      __DS0FilterTable,
      "Average_GCI_Per_Sale_FYTD_Live_", 'Measure'[Average GCI Per Sale FYTD(Live)]
    ),
    [Average_GCI_Per_Sale_FYTD_Live_],
    0,
    'Date'[Financial Year (Calendar)],
    1
  )

ORDER BY
  [Average_GCI_Per_Sale_FYTD_Live_] DESC, 'Date'[Financial Year (Calendar)]
</value>
  </data>
  <data name="TestResource_ExpectedQuery_ef80608174314156933f6517b9484ed7" xml:space="preserve">
    <value>with ctet1 as (
Select SUM (fs.[Net Commission]) ListingComm ,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
and fs.DIM_DATE_KEY between '20190401' and '20200331'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),

ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,fs.[Listing Number] 
from viewFactCommission fs
join dw.dimSales s 
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
--and fs.[Listing Number]='787230'
--and fs.DIM_DATE_KEY between '20200401' and '20210331'
group by fs.[Listing Number]  )
,
ctet3 as (
select iif(fulllisting=0,0,ListingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2 
on ctet1.[Listing Number]=ctet2.[Listing Number]
),

ctet4 as (
select round(sum(ctet3.ProductivityPerlisting) ,2) Count_of_Listing_Productivity_Rolling_12Month_live from ctet3 )
,

ctet5 as (
select SUM(NET_COMMISSION) Total_GCI_From_Listing_Trans_Rolling_12_Months
 from dw.factSalesCommission fs
 join dw.dimSales s
 on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
 where 
 --COMMISSION_TYPE_CODE='S'
 [COMMISSION_TYPE_NAME]='Listing Commission'
 and s.IS_SALECLEARED=1
  and DIM_DATE_FINALISED_KEY between '20190401' AND '20200331'

  )
  
  SELECT ROUND((Total_GCI_From_Listing_Trans_Rolling_12_Months/Count_of_Listing_Productivity_Rolling_12Month_live),3,2)
  as Average_GCI_Per_Listing_FYTD_Live
   from ctet4 join ctet5 on 1=1  




</value>
  </data>
  <data name="TestResource_ComparisonManifest_f099195aabad43dead7e1987aa6d0800" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAABAAAAAwAAACg8Q29tcGFyZXJEYXRhIHBlcmNlbnRhZ2VUb2xlcmFu
        Y2U9IjEiIC8+IUF2ZXJhZ2VfR0NJX1Blcl9MaXN0aW5nX0ZZVERfTGl2ZSRbQXZlcmFnZV9HQ0lfUGVy
        X0xpc3RpbmdfRllURF9MaXZlX10AAAAA
</value>
  </data>
  <data name="TestResource_ActualQuery_192dc5b8a6e746959717be64305f205c" xml:space="preserve">
    <value>// DAX Query
DEFINE VAR __DS0FilterTable = 
  TREATAS({"2019-2020"}, 'Date'[Financial Year (Calendar)])

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Financial Year (Calendar)],
      __DS0FilterTable,
      "Average_GCI_Per_Listing_FYTD_Live_", 'Measure'[Average GCI Per Listing FYTD(Live)]
    ),
    [Average_GCI_Per_Listing_FYTD_Live_],
    0,
    'Date'[Financial Year (Calendar)],
    1
  )

ORDER BY
  [Average_GCI_Per_Listing_FYTD_Live_] DESC, 'Date'[Financial Year (Calendar)]
</value>
  </data>
  <data name="TestResource_ExpectedQuery_645d53a44f7243999570b24c2cdb94e3" xml:space="preserve">
    <value>with ctet1 as (
Select SUM (fs.[Net Commission]) ListingComm ,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
and fs.DIM_DATE_KEY between '20190201' and '20200131'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),
ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,l.LISTING_NUMBER
from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
--and fs.[Listing Number]='787230'
group by l.LISTING_NUMBER  ),
ctet3 as (
select iif(fulllisting=0,0,ListingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2
on ctet1.[Listing Number]=ctet2.LISTING_NUMBER
)
select sum(ctet3.ProductivityPerlisting) Count_of_Listing_Productivity_Rolling_12_Months_Live FROM ctet3

</value>
  </data>
  <data name="TestResource_ActualQuery_d7b527bab3314421af75ec2592f60a05" xml:space="preserve">
    <value>// DAX Query
DEFINE
  VAR __DS0FilterTable = 
    TREATAS({"January"}, 'Date'[Calendar Month Name])

  VAR __DS0FilterTable2 = 
    FILTER(KEEPFILTERS(VALUES('Date'[Calendar Year])), 'Date'[Calendar Year] = 2020)

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Calendar Month Name],
      'Date'[Financial Month Number],
      'Date'[Calendar Year],
      __DS0FilterTable,
      __DS0FilterTable2,
      "Count_of_Listing_Productivity_Rolling_12_Months_Live_", ROUNDDOWN(('Measure'[Count of Listing Productivity Rolling 12 Months(Live)]),2)
    ),
    'Date'[Financial Month Number],
    1,
    'Date'[Calendar Month Name],
    1,
    'Date'[Calendar Year],
    1
  )

ORDER BY
  'Date'[Financial Month Number], 'Date'[Calendar Month Name], 'Date'[Calendar Year]
</value>
  </data>
  <data name="TestResource_ComparisonManifest_77dd3d48b11245fe897ae70f09d86d6b" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAADAAAAAgAAACM8Q29tcGFyZXJEYXRhIGZpeGVkVG9sZXJhbmNlPSIx
        IiAvPjRDb3VudF9vZl9MaXN0aW5nX1Byb2R1Y3Rpdml0eV9Sb2xsaW5nXzEyX01vbnRoc19MaXZlN1tD
        b3VudF9vZl9MaXN0aW5nX1Byb2R1Y3Rpdml0eV9Sb2xsaW5nXzEyX01vbnRoc19MaXZlX10AAAAA
</value>
  </data>
  <data name="TestResource_ExpectedQuery_66c122f6655b4b8d92134efc5eba46ec" xml:space="preserve">
    <value>with ctet1 as (
Select SUM (fs.[Net Commission]) ListingComm ,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
and fs.DIM_DATE_KEY between '20190401' and '20200331'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),
ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,l.LISTING_NUMBER
from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
--and fs.[Listing Number]='787230'
group by l.LISTING_NUMBER  ),
ctet3 as (
select iif(fulllisting=0,0,ListingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2
on ctet1.[Listing Number]=ctet2.LISTING_NUMBER
)
select SUM(ctet3.ProductivityPerlisting) Count_of_Listing_Productivity_FYTD_Live FROM ctet3

</value>
  </data>
  <data name="TestResource_ActualQuery_1e196568d1b04ed992d600a17ad1420b" xml:space="preserve">
    <value>// DAX Query
DEFINE VAR __DS0FilterTable = 
  TREATAS({TRUE}, 'Date'[Is Last Financial Year])

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Is Last Financial Year],
      __DS0FilterTable,
      "Count_of_Listing_Productivity_FYTD_Live_", 'Measure'[Count of Listing Productivity FYTD(Live)]
    ),
    [Count_of_Listing_Productivity_FYTD_Live_],
    0,
    'Date'[Is Last Financial Year],
    1
  )

ORDER BY
  [Count_of_Listing_Productivity_FYTD_Live_] DESC, 'Date'[Is Last Financial Year]
</value>
  </data>
  <data name="TestResource_ComparisonManifest_658f5d64b636403babd6e0c1b8041ad0" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAABAAAAAgAAACM8Q29tcGFyZXJEYXRhIGZpeGVkVG9sZXJhbmNlPSIx
        IiAvPidDb3VudF9vZl9MaXN0aW5nX1Byb2R1Y3Rpdml0eV9GWVREX0xpdmUqW0NvdW50X29mX0xpc3Rp
        bmdfUHJvZHVjdGl2aXR5X0ZZVERfTGl2ZV9dAAAAAA==
</value>
  </data>
  <data name="TestResource_ExpectedQuery_9db5984e727d419791885d85f897f727" xml:space="preserve">
    <value>with ctet1 as (
Select sum (fs.[Net Commission]) SellingComm,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
and fs.DIM_DATE_KEY between '20190201' and '20200131'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),

ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,fs.[Listing Number] 
from viewFactCommission fs
join dw.dimSales s 
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Selling Commission'
--and fs.[Listing Number]='787230'
--and fs.DIM_DATE_KEY between '20200401' and '20210331'
group by fs.[Listing Number]  )
,
ctet3 as (
select iif(fulllisting=0,0,SellingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2 
on ctet1.[Listing Number]=ctet2.[Listing Number]
),

ctet4 as (
select round(sum(ctet3.ProductivityPerlisting) ,2) Count_of_Selling_Productivity_Rolling_12Month_live from ctet3 )
,

ctet5 as (
select SUM(NET_COMMISSION) Total_GCI_From_Selling_Trans_Rolling_12_Months
 from dw.factSalesCommission fs
 join dw.dimSales s
 on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
 where 
 --COMMISSION_TYPE_CODE='S'
 [COMMISSION_TYPE_NAME]='Selling Commission'
 and s.IS_SALECLEARED=1
  and DIM_DATE_FINALISED_KEY between '20190201' AND '20200131'

  )
  
  SELECT ROUND((Total_GCI_From_Selling_Trans_Rolling_12_Months/Count_of_Selling_Productivity_Rolling_12Month_live),3,2)
  as Average_GCI_Per_Selling_rolling_12_month_Live
   from ctet4 join ctet5 on 1=1  




</value>
  </data>
  <data name="TestResource_ComparisonManifest_056ed04c389c4f8b9fd58b8e3e92c800" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAADAAAAAgAAACM8Q29tcGFyZXJEYXRhIGZpeGVkVG9sZXJhbmNlPSIx
        IiAvPi1BdmVyYWdlX0dDSV9QZXJfU2VsbGluZ19yb2xsaW5nXzEyX21vbnRoX0xpdmUuW0F2ZXJhZ2Vf
        R0NJX1Blcl9TYWxlX1JvbGxpbmdfMTJfTW9udGhzX0xpdmVfXQAAAAA=
</value>
  </data>
  <data name="TestResource_ActualQuery_82c3046a199d407a87f0c977bbb7f6ef" xml:space="preserve">
    <value>// DAX Query
DEFINE
  VAR __DS0FilterTable = 
    TREATAS({"January"}, 'Date'[Calendar Month Name])

  VAR __DS0FilterTable2 = 
    FILTER(KEEPFILTERS(VALUES('Date'[Calendar Year])), 'Date'[Calendar Year] = 2020)

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Calendar Month Name],
      'Date'[Financial Month Number],
      'Date'[Calendar Year],
      __DS0FilterTable,
      __DS0FilterTable2,
      "Average_GCI_Per_Sale_Rolling_12_Months_Live_", 'Measure'[Average GCI Per Sale Rolling 12 Months(Live)]
    ),
    'Date'[Financial Month Number],
    1,
    'Date'[Calendar Month Name],
    1,
    'Date'[Calendar Year],
    1
  )

ORDER BY
  'Date'[Financial Month Number], 'Date'[Calendar Month Name], 'Date'[Calendar Year]
</value>
  </data>
  <data name="TestResource_ExpectedQuery_e34ac9975d1242ce9363bb6a21edc0f9" xml:space="preserve">
    <value>with ctet1 as (
Select SUM (fs.[Net Commission]) ListingComm,fs.[Listing Number],s.DIM_SALES_KEY from viewFactCommission fs
join dw.dimSales s
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
and fs.DIM_DATE_KEY between '20190201' and '20200131'
--and [Listing Number]='787230'
group by fs.[Listing Number] ,s.DIM_SALES_KEY
),

ctet2 as
(
Select sum (fs.[Net Commission]) fulllisting,fs.[Listing Number] 
from viewFactCommission fs
join dw.dimSales s 
on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
join dw.dimListing l
on l.DIM_LISTING_KEY=fs.DIM_LISTING_KEY
where s.IS_SALECLEARED=1
and fs.[Commission Type]='Listing Commission'
--and fs.[Listing Number]='787230'
--and fs.DIM_DATE_KEY between '20200401' and '20210331'
group by fs.[Listing Number]  )
,
ctet3 as (
select iif(fulllisting=0,0,ListingComm/fulllisting) ProductivityPerlisting,
[ctet1].[Listing Number]  from ctet1 left join ctet2 
on ctet1.[Listing Number]=ctet2.[Listing Number]
),

ctet4 as (
select round(sum(ctet3.ProductivityPerlisting) ,2) Count_of_Listing_Productivity_Rolling_12Month_live from ctet3 )
,

ctet5 as (
select SUM(NET_COMMISSION) Total_GCI_From_Listing_Trans_Rolling_12_Months
 from dw.factSalesCommission fs
 join dw.dimSales s
 on fs.DIM_SALES_KEY=s.DIM_SALES_KEY
 where 
 --COMMISSION_TYPE_CODE='S'
 [COMMISSION_TYPE_NAME]='Listing Commission'
 and s.IS_SALECLEARED=1
  and DIM_DATE_FINALISED_KEY between '20190201' AND '20200131'

  )
  
  SELECT ROUND((Total_GCI_From_Listing_Trans_Rolling_12_Months/Count_of_Listing_Productivity_Rolling_12Month_live),3,2)
  as Average_GCI_Per_Selling_rolling_12_month_Live
   from ctet4 join ctet5 on 1=1  




</value>
  </data>
  <data name="TestResource_ComparisonManifest_be7d93a28cce477881f2e3f4bc7a20fc" type="System.Byte[], mscorlib">
    <value>
        AgAAAAAAAAABAAAAAgAAAAAAAAADAAAAAgAAACM8Q29tcGFyZXJEYXRhIGZpeGVkVG9sZXJhbmNlPSIx
        IiAvPi1BdmVyYWdlX0dDSV9QZXJfU2VsbGluZ19yb2xsaW5nXzEyX21vbnRoX0xpdmUxW0F2ZXJhZ2Vf
        R0NJX1Blcl9MaXN0aW5nX1JvbGxpbmdfMTJfTW9udGhzX0xpdmVfXQAAAAA=
</value>
  </data>
  <data name="TestResource_ActualQuery_d921d9307a144810ba9f40a678fa598f" xml:space="preserve">
    <value>// DAX Query
DEFINE
  VAR __DS0FilterTable = 
    TREATAS({"January"}, 'Date'[Calendar Month Name])

  VAR __DS0FilterTable2 = 
    FILTER(KEEPFILTERS(VALUES('Date'[Calendar Year])), 'Date'[Calendar Year] = 2020)

EVALUATE
  TOPN(
    501,
    SUMMARIZECOLUMNS(
      'Date'[Calendar Month Name],
      'Date'[Financial Month Number],
      'Date'[Calendar Year],
      __DS0FilterTable,
      __DS0FilterTable2,
      "Average_GCI_Per_Listing_Rolling_12_Months_Live_", 'Measure'[Average GCI Per Listing Rolling 12 Months(Live)]
    ),
    'Date'[Financial Month Number],
    1,
    'Date'[Calendar Month Name],
    1,
    'Date'[Calendar Year],
    1
  )

ORDER BY
  'Date'[Financial Month Number], 'Date'[Calendar Month Name], 'Date'[Calendar Year]
</value>
  </data>
  <data name="TestManifest_DanElzerAverageCommission_7594a693f9504302a70237eb1620d869" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;TestManifest failOnServerPublishFailureExpression="False" testSuiteId="ae79b540-c994-4d59-9294-b3d13bfa03a9" testSuiteName="Dan Elzer Average Commission" testGroupId="7594a693-f950-4302-a702-37eb1620d869" testGroupName="Dan Elzer Average Commission" isSingleGroupMode="True" publishUrl="https://test-api.sentryone.com" publishUserName="asingh@barfoot.co.nz" publishorganizationIdentifier="346" accessToken="OcjV3EfxP3aWHJten0vq8y1hlAFEIPCqVPq0m7FDq5aQWcKm0kaYv/Nwmewb18la0ik/zkxA5CBIARokLVARrolDLM/5jgjwll1C1ukCDSJM4ztqH1t9gdt95zHkzD5XDM65shQHiqQQPMZh8GYbaFv9VZjoidEOtof5wwNIBeO0ZDmcngVPkO91ZcH56petg/AKHi1TQMgjZyR817JUYaUM3q7rz3Z+CB0WFDVQnnNbuOdpP1cdc/wBvk7nKpY4koFB42JGtX+SUH9QhQI0KEhY4wHH/4c9Pajn48cbd58bmMUbo63gfLWHgDZa5tkEnsWK7uMji7jaCiCH+NG18wzhjkt45WsPLti3d1zRxWWaGAFjdd+riywGnGjVhRw/UVROPjHvBOPfvQpBDnxYKY0wkrgzkcdT3OHb30wdG5vX2L3Tfu6YUauWO/u2jzL6BVZi79S7+u/0NnSbRMQzfLDx/z1G7Lc0toMlVKS4iA+MOj6QYvLDp0FFNuv4f5ku7BG32aRyyKouwl3ShWyzrqTfv7++KHm6g3XaKmN37vkpi+SZbzvq1eoy2ltICEvAgGFAmiCxQhJ+kWOBi0WDi1jWUN2SqajAttcG8xhc41OCvOh9Hf7hg+R5SK+QnZjjp54t1BN0MccaOV+A802BjccilWniFu6BsOJPXfnnT+DxuppJtejvHYL2mvjYOSGWp8vS9L0SMSB7ml+ZKZjMR/BZsTbdhjJL4HfLM5F8WluNpZwVuAR7p6Vzmf8/kQqdelIa5ZmU7bkLOXG+HJUJsUD8Rxwv/XxspsY27/DjoR3Y2J/ZEPXO9drg3h/2YEnldjbAZ4yp4vVterLKZuLfA+4V95O8eXPRZ4sParNhbjWAA3SpbasaH1Ob+/gyvJAR+Pz2mzO+r7c2ShpYfKssp8sq2Ch/QYkjtX1aCEEf81vMP4F3qTVPxNgKltPmREKOliG4iyW7UdL9R/BalwBUNT+c7ysZ5bSeORBErJyo4hRp0+grOby6fk0apM9yhfvz8Y7mwecdj/ZSSbmxyt7oVPT0NJw8fHTCXINZFcnq4hgg5MOjEmI6jY41XV9ThlQwS89NLfn7dIfN8FISXoltevOzfrIG1CHrVJZpF4+Rxd+PX9EiqcXvHRlrftpOZDKsuLc2OZzVJeBVEHqWWlQ5fHPhMkvJgvePvGSXKC/Lt3CtHjQyF4M0qvGczJd9EAtv497XOi0d/6NtTF9U+6Bi8ZLlD9p8AQ3Tr29JufhxGFnOMzxKqYdxsrx9mcxiO2KYKQEPPK8yoYPRRjlku1px4TyAb/YmSWWhvI4GaImpOE8uCmVQWTKb3hA6m7wTvs9e8VdYK/EAuK9DGw6I+CTg58KkOkkNxeFshgGdE1mxAFY/NSxHVNgOzasrvpk+rYRhrK98RXrRTCVmP0iKVDARlugiizH7ZLC1JXV4BjoeG4huklxzvCDyFs2dj8LX1tii1IsInZ9UbeO73TtRn71nbFyE59bKTSujAY++LwMP7/mnKisg9SNvU1dvIhsSnc2foFnixTcHui16ZV2pmGzoO2pj065kozRS0n9CM29b/9D/+3fOJNb1fM91PyxEJrubLRrkOIxDw8DhJdGJtiYO1Nqbx6qbZpmbwDzGEBd8tRgoZxABA4B07pDf2WjD7y2L3TDWBpCjLJcj6miPh0BvWw==" refreshToken="MgflqJwMeuPXbgk3QVmU3AgGHLEk8LSjTj2faV1F6k5qa4mCANPAC4X9dP/Xuy/GwoAYpWLNgSPiP/HRXZKc8tg3SwO6vmDhyYay7ebCjt0="&gt;&lt;Keys&gt;&lt;Key key="TestSuiteRevision" value="34" /&gt;&lt;/Keys&gt;&lt;MethodAssociations&gt;&lt;MethodAssociation methodName="AverageGCIPerListingFYTDLive" testName="Average GCI Per Listing FYTD Live" testUniqueId="2b1c1056-c4b1-48e4-960a-24f843109237" /&gt;&lt;MethodAssociation methodName="AverageGCIPerListingRolling12MonthsLive" testName="Average GCI Per Listing Rolling 12 Months Live" testUniqueId="6eee9250-af2c-43a0-b6d9-4f8c82c8d868" /&gt;&lt;MethodAssociation methodName="AverageGCIPerSaleFYTDLive" testName="Average GCI Per Sale FYTD Live" testUniqueId="d6ac7f9d-c0fb-4ae1-8217-51be05eba603" /&gt;&lt;MethodAssociation methodName="AverageGCIPerSaleRolling12MonthsLive" testName="Average GCI Per Sale Rolling 12 Months Live" testUniqueId="d1d5d10f-d6a4-4817-85ee-5b4139d8df6e" /&gt;&lt;MethodAssociation methodName="CountofListingProductivityFYTDLive" testName="Count of Listing Productivity FYTD Live" testUniqueId="a001f612-aed3-4273-b12b-587e825d3164" /&gt;&lt;MethodAssociation methodName="CountofListingProductivityRolling12MonthLive" testName="Count of Listing Productivity Rolling 12 Month Live" testUniqueId="cd8457f1-2e22-4ca2-b34e-32db164b35ad" /&gt;&lt;MethodAssociation methodName="CountofSellingProductivityFYTDLive" testName="Count of Selling Productivity FYTD Live " testUniqueId="6993c3cc-d7db-4af6-a4e1-624f13714fa0" /&gt;&lt;MethodAssociation methodName="CountofSellingProductivityRolling12MonthLive" testName="Count of Selling Productivity Rolling 12 Month Live" testUniqueId="e2120bbb-3ef3-451e-a823-f4f3b4cfd1be" /&gt;&lt;MethodAssociation methodName="SumofFullSellingCommision" testName="Sum of Full Selling Commision" testUniqueId="5412ef34-58a2-4f42-a963-a291d2897472" /&gt;&lt;/MethodAssociations&gt;&lt;/TestManifest&gt;</value>
  </data>
</root>